// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: codes.proto

#include "codes.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace codes {
}  // namespace codes
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_codes_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_codes_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_codes_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_codes_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_codes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013codes.proto\022\005codes*\240\001\n\tCloseCode\022\016\n\nDO"
  "_NOT_USE\020\000\022\020\n\013ON_WAITLIST\020\370#\022\023\n\016INCOMPLE"
  "TE_KYC\020\371#\022\023\n\016UNAPPROVED_KYC\020\372#\022\020\n\013BAD_ME"
  "SSAGE\020\334$\022\021\n\014NO_HEARTBEAT\020\335$\022\020\n\013UNSPECIFI"
  "ED\020\207\'\"\005\010\001\020\237\037\"\t\010\210\'\020\377\377\377\377\007B\022Z\003go/\252\002\nCube.Co"
  "desb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_codes_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_codes_2eproto = {
  false, false, 211, descriptor_table_protodef_codes_2eproto, "codes.proto", 
  &descriptor_table_codes_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_codes_2eproto::offsets,
  file_level_metadata_codes_2eproto, file_level_enum_descriptors_codes_2eproto, file_level_service_descriptors_codes_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_codes_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_codes_2eproto);
  return descriptor_table_codes_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_codes_2eproto(&descriptor_table_codes_2eproto);
namespace codes {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloseCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_codes_2eproto);
  return file_level_enum_descriptors_codes_2eproto[0];
}
bool CloseCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 4600:
    case 4601:
    case 4602:
    case 4700:
    case 4701:
    case 4999:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace codes
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
